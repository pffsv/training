<?php
//28.Задачи на регулярные выражения PHP
//Примеры решения задач
/*1. Дана строка 'aaa:444 kkk:333'. Напишите регулярку, 
которая найдет строки по шаблону: любое количество букв, символ ":", 
любое цифр и поменяет местами то, что стоит до ":" на то, 
что стоит после него. Например, aaa:444 должно превратиться в 444:aaa.*/

	echo preg_replace('#([a-z]+):(\d+)#i', '$2:$1', 'aaa:444 kkk:333').'<br>';

//2.Дана строка '332 441 550'. Найдите все места, где есть два одинаковых идущих подряд цифры и замените их на '!'.

	echo preg_replace('#(\d)\1#i', '!', '332 441 550').'<br>';

//На карманы при замене
/*1. Дана строка 'aaa@bbb eee7@kkk'. Напишите регулярку, которая найдет строки по шаблону: 
любое количество букв и цифр, символ @, любое количество букв и цифр и поменяет местами то, 
что стоит до @ на то, что стоит после нее. Например, aaa@bbb должно превратиться в bbb@aaa.*/

	echo preg_replace('#([a-z0-9]+)@([a-z0-9]+)#', '$2@$1', 'aaa@bbb eee7@kkk').'<br>';

/*2.Дана строка вида 'a1b2c3'. Напишите регулярку, которая найдет все цифры и удвоит их 
количество таким образом: 'a11b22c33' (то есть рядом с каждой цифрой напишет такую же).*/

	echo preg_replace('#\d#', '$0$0', 'a1b2c3').'<br>';

//На карманы в самой регулярке
//3. Дана строка 'aae xxz 33a'. Найдите все места, где есть два одинаковых идущих подряд символа и замените их на '!'. Показать решение.

	echo preg_replace('#([a-z\d])\1#', '!', 'aae xxz 33a').'<br>';

//4.Дана строка 'aaa bcd xxx efg'. Найдите строки, состоящие из одинаковых символов (это будет aaa xxx). Показать решение.

	echo preg_replace('#([a-z])\1+#', '!', 'aaa bcd xxx efg').'<br>';

//Задачи на preg_match[_all]
/*Задачи ниже не всегда можно решить с помощью одной только регулярки. 
Может понадобится еще что-нибудь дописать на PHP (не всегда, но такое может быть).*/
/*5.С помощью preg_match определите, что переданная строка является емэйлом. 
Примеры емэйлов для тестирования mymail@mail.ru, my.mail@mail.ru, my-mail@mail.ru, 
my_mail@mail.ru, mail@mail.com, mail@mail.by, mail@yandex.ru.*/

	$str = 'mymail@mail.ru';
	echo preg_match('#^[a-z0-9_.-]+@[a-z_.-]+\.[a-z]{2,}$#', $str).'<br>';

//6.Дана строка с текстом, в котором могут быть емейлы. С помощью preg_match_all найдите все емэйлы.

	$str = 'mymail@mail.ru, my.mail@mail.ru, my-mail@mail.ru';
	preg_match_all('#[a-z0-9_.-]+@[a-z_.-]+\.[a-z]{2,}#', $str, $matches).'<br>';
	var_dump($matches);

//7.С помощью preg_match определите, что переданная строка является доменом. Примеры доменов: site.ru, site.com, my-site123.com.

	echo preg_match('#^[a-z0-9-]+\.[a-z]{2,}$#', 'my-site.com').'<br>';

/*8.С помощью preg_match определите, что переданная строка является доменом 3-го уровня. 
Примеры доменов: hello.site.ru, hello.site.com, hello.my-site.com.*/

	echo preg_match('#^[a-z0-9-]+\.[a-z0-9-]+\.[a-z]{2,}$#', 'hello.my-site.com').'<br>';

/*9.С помощью preg_match определите, что переданная строка является доменом, 
название которого начинается с http. Примеры доменов: http://site.ru, http://site.com.*/

	echo preg_match('#^http://[a-z0-9-]+\.[a-z]{2,}$#', 'http://site.com').'<br>';

/*10.С помощью preg_match определите, что переданная строка является доменом вида 
http://site.ru. Протокол может быть как http, так и https.*/

	echo preg_match('#^https?://[a-z0-9-]+\.[a-z]{2,}$#', 'https://site.com').'<br>';

/*11.С помощью preg_match определите, что переданная строка является доменом. 
Протокол может быть как http, так и https. Домен может быть со слешем в конце: 
http://site.ru, http://site.ru/, https://site.ru, https://site.ru/.*/

	echo preg_match('#^https?://[a-z0-9-]+\.[a-z]{2,}/?$#', 'https://site.co').'<br>';

//12.С помощью preg_match определите, что переданная строка начинается с http или с https.

	echo preg_match('#^https?#', 'https://site.com/').'<br>';

//13.С помощью preg_match определите, что переданная строка заканчивается расширением txt, html или php.

	echo preg_match('#\.(txt|html|php)$#', 'index.html').'<br>';

//14.С помощью preg_match определите, что переданная строка заканчивается расширением jpg или jpeg.

	echo preg_match('#\.jpe?g$#', 'maket.jpeg').'<br>';

//15.С помощью preg_match узнайте является ли строка числом, длиной до 12 цифр.

	echo preg_match('#^\d{1,12}$#', '012345678910').'<br>';

//16.Дана строка с буквами, пробелами и цифрами. Найдите сумму всех чисел из данной строки.

	preg_match_all('#\d#', 'asf5asg 2asg sahh3', $matches);
	echo(array_sum($matches[0])).'<br>';

//Задачи на preg_replace
//17.С помощью preg_replace преобразуйте дату в формате '31-12-2014' в '2014.12.31'.

	echo preg_replace('#(\d{2})\-(\d{2})\-(\d{4})#', '$3.$2.$1','31-12-2014').'<br>';

//18.С помощью preg_replace замените в строке домены вида http://site.ru, http://site.com на <a href="http://site.ru">site.ru</a>.

	$str = 'http://site.ru, http://site.com, https://site.info';
	echo preg_replace('#https?://([a-z0-9-]+\.[a-z]{2,})#', '<a href="$0">$1</a>', $str).'<br>';


?>