<?php
trait tr_1{         //Трейты объявляются при помощи служебного слова trait
  public $var_tr_1='Свойство 1-го трейта';//Объявили свойство трейта
  public function func_tr_1(){            //Объявили метод трейта
    echo 'Метод 1-го трейта'.'<br>';
  }
}
trait tr_2{                               //Объявили второй трейт
  static $var_tr_2='Статическое свойство 2-го трейта '; 
  public static function func_tr_2(){     //Объявили статический метод трейта
    echo 'Статический метод 2-го трейта'.'<br>';
  }
}
trait tr_3{                               //Объявили третий трейт
  use tr_1, tr_2;                         //Подключаем первый и второй трейты
  public abstract function func_tr_3();   //Объявили абстрактный метод трейта
}
trait tr_4{                               //Объявили четвертый трейт
  public abstract function func_tr_4();   //Объявили абстрактный метод трейта
}
 
class base_class_1{                       //Объявили первый класс
  use tr_1;                               //Подключаем первый трейт
  public function func_bs_cl_1(){         //Объявили метод первого класса
    echo 'Метод класса base_class_1'.'<br>';
  }
}
class child_class_1 extends base_class_1{//Объявили класс-потомок первого класса
  use tr_2;                              //Подключаем второй трейт 
  public function func_cld_cl_1(){       //Объявили метод класса
    echo 'Метод класса-потомка child_class_1'.'<br>';
  }
}
 
class base_class_2{                       //Объявили второй класс
  public $var_bs_cl_2='Св-во 2-го класса';//Объявили свойство второго класса
  use tr_3,tr_4;                          //Подключаем третий и четвертый трейты
  public function func_tr_3(){            //Абстр. метод должен быть реализован
    echo 'Реализация абстр. метода func_tr_3'.'<br>';
  }
  public function func_tr_4(){            //Абстр. метод должен быть реализован
    echo 'Реализация абстр. метода func_tr_4'.'<br>';
  }
}
 
$obj_cld_cl_1=new child_class_1();//Создали объект класса-потомка child_class_1
$obj_cld_cl_1->func_tr_1();       //Выведет 'Метод 1-го трейта'
$obj_cld_cl_1::func_tr_2();       //Выведет 'Статический метод 2-го трейта'
$obj_cld_cl_1->func_bs_cl_1();    //Выведет 'Метод класса base_class_1'
$obj_cld_cl_1->func_cld_cl_1();   //Выведет 'Метод класса-потомка child_class_1'
echo $obj_cld_cl_1->var_tr_1.'<br>'; //Выведет 'Свойство 1-го трейта'
echo $obj_cld_cl_1::$var_tr_2.'<br>';//Выведет 'Статическое свойство 2-го трейта'
 
$obj_bs_cl_2=new base_class_2();  //Создали объект класса base_class_2
$obj_bs_cl_2->func_tr_3();        //Выведет 'Реализация абстр. метода func_tr_3'
$obj_bs_cl_2->func_tr_4();        //Выведет 'Реализация абстр. метода func_tr_4'
echo $obj_bs_cl_2->var_bs_cl_2.'<br>';//Выведет 'Св-во 2-го класса'
  /* Плюс свойства и методы всех подключенных ко второму классу трейтов */
$obj_bs_cl_2->func_tr_1();        //Выведет 'Метод 1-го трейта'
$obj_bs_cl_2::func_tr_2();        //Выведет 'Статический метод 2-го трейта'
echo $obj_bs_cl_2->var_tr_1.'<br>';//Выведет 'Свойство 1-го трейта'
echo $obj_bs_cl_2::$var_tr_2;     //Выведет 'Статическое свойство 2-го трейта'
?> 