Добавляем сессию
Наша авторизация должна работать так: пользователь, который хочет авторизоваться на сайте, заходит на страницу login.php, вбивает правильные логин и пароль и далее ходит по страницам сайта уже будучи авторизованным.

Чтобы другие страницы сайта знали о том, что наш пользователь авторизован, мы должны хранить в сессии пометку об этом.

Пока наша авторизация не совсем рабочая, так как сессию мы еще не подключили и другие страницы сайта не могут понять, авторизован пользователь или нет.

Будем хранить пометку об авторизации в переменной сессии $_SESSION['auth'] - если там записано true, то пользователь авторизован, а если null - то не авторизован.

Значение null будет в $_SESSION['auth'] изначально (так как $_SESSION['auth'] не определено), еще до того, как пользователь совершит попытку авторизации.

Давайте внесем соответствующую правку в наш код:

<?php
$local = 'localhost'; 
$user = 'root'; 
$password = ''; 
$db_base = 'test'; 

$connect = mysqli_connect($local, $user, $password, $db_base) or die (mysqli_error($connect)); 
mysqli_query($connect, "SET NAMES 'utf8'"); 
	// Если форма авторизации отправлена...
	if (!empty($_POST['password']) and !empty($_POST['login'])) {
		
		$login = $_POST['login'];
		$password = $_POST['password'];
		
		$query = "SELECT * FROM users WHERE login='$login' AND password='$password'";
		$result = mysqli_query($link, $query);
		$user = mysqli_fetch_assoc($result);
		
		if (!empty($user)) {
			// Пользователь прошел авторизацию, запишем в сессию пометку от этом:
			$_SESSION['auth'] = true;
		} else {
			//Пользователь неверно ввел логин или пароль, выполним какой-то код
		}
	}
	
?>
Итак, до того, как пользователь совершил правильную авторизацию, $_SESSION['auth'] будет не определено, то есть иметь значение null, а если пользователь авторизовался, то $_SESSION['auth'] будет иметь значение true.

Теперь на любой странице сайта мы можем проверить, авторизован пользователь или нет, вот таким образом:

<?php
	if (!empty($_SESSION['auth'])) {
		
	}
?>
Нельзя просто проверить if ($_SESSION['auth'] == true), так как если в $_SESSION['auth'] ничего нет - это вызовет ошибку.

Можно закрыть текст какой-нибудь страницы целиком для неавторизованного пользователя. Просто поместим весь ее текст под наш иф:

<?php
	if (!empty($_SESSION['auth'])) {
?>
	<!DOCTYPE html>
	<html>
		<head>
			
		</head>
		<body>
			<p>текст только для авторизованного пользователя</p>
		</body>
	</html>
<?php
	} else {
?>
	<p>пожалуйста, авторизуйтесь</p>
<?php
	}
?>
Можно закрыть только часть страницы:

<!DOCTYPE html>
<html>
	<head>
		
	</head>
	<body>
		<p>текст для любого пользователя</p>
		<?php
			if (!empty($_SESSION['auth'])) {
				echo 'текст только для авторизованного пользователя';
			}
		?>
		<p>текст для любого пользователя</p>
	</body>
</html>

Логаут
Авторизованный пользователь должен возможность перестать быть авторизованным, то есть совершить выход из своего аккаунта, или по-английски логаут (logout).

Для этого можно сделать отдельную страницу, чаще всего ее называют logout.php, и удалять на ней пометку об авторизации, примерно вот так:

<?php
	session_start(); // обязательно стартуем сессию, чтобы с ней далее работать
	$_SESSION['auth'] = null;
?>
Можно вместо присваивания null сделать unset($_SESSION['auth']) - это будет то же самое. Однако, функция unset в PHP7 считается устаревшей и в PHP8 будет удалена, не будем ее использовать.

Не стоит тут разрушать ВСЮ сессию через session_destroy, так как в сессии могут хранится еще и другие полезные данные.


