<?php
 
//Трейты объявляются при помощи служебного слова trait
trait tr_1{         
  //Объявили свойство трейта
  public $var_tr_1='Свойство 1-го трейта';
  //Объявили метод трейта
  public function func_tr_1(){            
    echo 'Метод 1-го трейта'.'<br>';
  }
}
 
//Объявили второй трейт
trait tr_2{                               
  static $var_tr_2='Статическое свойство 2-го трейта '; 
  //Объявили статический метод трейта
  public static function func_tr_2(){     
    echo 'Статический метод 2-го трейта'.'<br>';
  }
}
 
//Объявили третий трейт
trait tr_3{                               
  //Подключаем первый и второй трейты
  use tr_1, tr_2;                         
  //Объявили абстрактный метод трейта
  public abstract function func_tr_3();   
}
 
//Объявили четвертый трейт
trait tr_4{                               
  //Объявили абстрактный метод трейта
  public abstract function func_tr_4();   
}
 
//Объявили первый класс
class base_class_1{                       
  //Подключаем первый трейт
  use tr_1;                               
  //Объявили метод первого класса
  public function func_bs_cl_1(){         
    echo 'Метод класса base_class_1'.'<br>';
  }
}
 
//Объявили класс-потомок первого класса
class child_class_1 extends base_class_1{
  //Подключаем второй трейт 
  use tr_2;                              
  //Объявили метод класса
  public function func_cld_cl_1(){       
    echo 'Метод класса-потомка child_class_1'.'<br>';
  }
}
 
//Объявили второй класс
class base_class_2{                       
  //Объявили свойство второго класса
  public $var_bs_cl_2='Св-во 2-го класса';
  //Подключаем третий и четвертый трейты
  use tr_3,tr_4;                          
   
  //Абстрактный метод должен быть реализован
  public function func_tr_3(){            
    echo 'Реализация абстр. метода func_tr_3'.'<br>';
  }
   
  //Абстрактный метод должен быть реализован
  public function func_tr_4(){            
    echo 'Реализация абстр. метода func_tr_4'.'<br>';
  }
}
 
//Создали объект класса-потомка child_class_1
$obj_cld_cl_1=new child_class_1();
//Выведет 'Метод 1-го трейта'
$obj_cld_cl_1->func_tr_1();       
//Выведет 'Статический метод 2-го трейта'
$obj_cld_cl_1::func_tr_2();       
//Выведет 'Метод класса base_class_1'
$obj_cld_cl_1->func_bs_cl_1();    
//Выведет 'Метод класса-потомка child_class_1'
$obj_cld_cl_1->func_cld_cl_1();   
//Выведет 'Свойство 1-го трейта'
echo $obj_cld_cl_1->var_tr_1.'<br>'; 
//Выведет 'Статическое свойство 2-го трейта'
echo $obj_cld_cl_1::$var_tr_2.'<br>';
 
 
//Создали объект класса base_class_2
$obj_bs_cl_2=new base_class_2();  
//Выведет 'Реализация абстр. метода func_tr_3'
$obj_bs_cl_2->func_tr_3();        
//Выведет 'Реализация абстр. метода func_tr_4'
$obj_bs_cl_2->func_tr_4();        
//Выведет 'Св-во 2-го класса'
echo $obj_bs_cl_2->var_bs_cl_2.'<br>';
 
//Плюс свойства и методы всех подключенных ко второму классу трейтов
 
//Выведет 'Метод 1-го трейта
$obj_bs_cl_2->func_tr_1();        '
//Выведет 'Статический метод 2-го трейта'
$obj_bs_cl_2::func_tr_2();        
//Выведет 'Свойство 1-го трейта'
echo $obj_bs_cl_2->var_tr_1.'<br>';
//Выведет 'Статическое свойство 2-го трейта'
echo $obj_bs_cl_2::$var_tr_2;     
 
?>
