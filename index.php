<?php
 
//Оформим аргументы, которые необходимо передать конструктору 
//mysqli::__construct, в виде переменных
 
//Имя хоста задаем как "localhost", хотя можем входить с любого компьютера
$servername = "localhost";
//Входим под именем администратора  
$username = "administrator"; 
//Не забываем про пароль
$password = "12345";
//Указываем базу данных, к которой будем  подключаться
$db_name = "belarusweb_users";
//Создаем объект соединения с MySQL 
$conn = new mysqli ($servername, $username, $password, $db_name);
 
//Если произойдет ошибка соединения, то выведем строку с описанием последней 
//ошибки подключения, использовав свойство объекта mysqli->connect_error 
//и прервем скрипт
if ($conn->connect_error){   
  //Функция die() выводит сообщение и прекращает выполнение текущего скрипта
  echo "Ошибка соединения с сервером MySQL: ".$conn->connect_error."<br>";
  //Функция die() выводит сообщение и прекращает выполнение текущего скрипта  
  die("Соединение установлено не было.");
}
//Установим кодировку данных для данного соединения с MySQL, 
//чтобы русские символы правильно отображались в базе.
$conn->set_charset("utf8"); 
 
//Чтобы не использовать повторно большие куски кода, оформим класс 
class sql_msg{
  //Статический метод можно будет вызывать без создания объекта
  public static function result($rslt){
    //Будем использовать глобальную переменную
    global $conn;
    //Если запрос не удался
    if($rslt === false){
      //Прекращаем выполнение скрипта и выводим строку с описанием ошибки
      echo "Ошибка операции: ".$conn->error.".";   
      //Т.к. соединение нам пока не нужно, закрываем его
      $conn->close();
      //Функция die() прекращает дальнейшее выполнение текущего скрипта 
      die();
    }
  }
}
echo 'Первый пример.<br>';
 
//.............. 1. mysqli_result::fetch_row()  ......................
 
//Выберем все строки, в столбце first_name которых 
//присутствует значение 'Сергей'
$sql_1 = "select * from our_users where first_name='Сергей'"; 
//Выполняем запрос, а результат присваеваем переменной
$rslt_1=$conn->query($sql_1);
//Если запрос прошел успешно, сообщаем об успехе
sql_msg::result($rslt_1);
 
//mysqli_result::$num_rows возвращает число рядов результирующей выборки
//Так что цикл выведет все строки подряд
for($i=0; $i<$rslt_1->num_rows; $i++){
  //mysqli_result::fetch_row() возвращает строку выборки в виде массива, 
  //т.е. значения каждой колонки строки становятся элементами массива
  $m = $rslt_1->fetch_row();
  //Выведем через пробел все значения массива (т.е. колонок текущей строки)
  for($k=0; $k<count($m); $k++){
    echo $m[$k].' &nbsp ';
  }
  //Значения каждой новой строки результир-го набора выведем на новой строке
  echo '<br>';
}
 
//Освобождаем память занятую результатами запроса
$rslt_1->free();
//Значения каждого нового запроса выведем на новой строке
echo '<br>Второй пример.<br>';
 
//.............. 2. mysqli_result::fetch_assoc()  ......................
 
//Выберем все строки, в столбце first_name которых 
//присутствует значение 'Сергей'
$sql_1 = "select * from our_users where first_name='Сергей'"; 
//Выполняем запрос, а результат присваеваем переменной
$rslt_1=$conn->query($sql_1);
//Если запрос прошел успешно, сообщаем об успехе
sql_msg::result($rslt_1);
 
//mysqli_result::$num_rows возвращает число рядов результирующей выборки
//Так что цикл выведет все строки подряд
for($i=0; $i<$rslt_1->num_rows; $i++){
  //mysqli_result::fetch_assoc() возвращает строку выборки в виде 
  //ассоциативного массива, т.е. значения каждой колонки строки  
  //становятся элементами массива, в котором ключи элементов массива 
  //соответствуют именам колонок строки
  $m = $rslt_1->fetch_assoc();
   
  //Выведем через пробел все значения массива (т.е. колонок текущей строки)
  foreach($m as $key=>$value){
    echo $m[$key].' &nbsp ';
  }
  //Значения каждой новой строки результир-го набора выведем на новой строке
  echo '<br>';
}
 
//Освобождаем память занятую результатами запроса
$rslt_1->free();
//Значения каждого нового запроса выведем на новой строке
echo '<br>Третий пример.<br>';
   
//............... 3. mysqli_result::fetch_array()  .......................
 
//Выберем все строки, в столбце first_name которых 
//присутствует значение 'Сергей'
$sql_1 = "select * from our_users where first_name='Сергей'"; 
//Выполняем запрос, а результат присваеваем переменной
$rslt_1=$conn->query($sql_1);
//Если запрос прошел успешно, сообщаем об успехе
sql_msg::result($rslt_1);
 
//Сместим указатель на 1-ю строку набора при 
//помощи mysqli_result::data_seek() 
$rslt_1->data_seek(0);
 
//mysqli_result::fetch_array(MYSQLI_ASSOC | MYSQLI_NUM | MYSQLI_BOTH) 
//возвращает строку выборки в виде ассоциативного массива, 
//обычного или сразу обоих  
$m = $rslt_1->fetch_array(MYSQLI_ASSOC);
 
//Выведем через пробел все значения массива, используя именованные ключи
foreach($m as $key=>$value){
  echo $m[$key].' &nbsp ';
}
//Значения следующей строки результирующего набора 
//выведем на новой строке
echo '<br>';
 
//Сместим указатель на последнюю строку набора 
$rslt_1->data_seek($rslt_1->num_rows-1);
 
//mysqli_result::fetch_array(MYSQLI_ASSOC | MYSQLI_NUM | MYSQLI_BOTH) 
//возвращает строку выборки в виде ассоциативного массива, 
//обычного или сразу обоих  
$m = $rslt_1->fetch_array(MYSQLI_NUM);
 
//Выведем через пробел все значения массива используя числовые ключи
for($i=0; $i<$rslt_1->field_count; $i++){
  echo $m[$i].' &nbsp ';
}
//Освобождаем память занятую результатами запроса
$rslt_1->free();
 
//Т.к. больше соединение нам пока не нужно, закрываем его
$conn->close();   
 
?> 
