<?php
//19.Продвинутая работа с пользовательскими функциями в PHP
//Значения по умолчанию

//Функция, которая возвращает квадрат числа:
/*	function square($var)
	{
		$result = $var*$var;
		return $result;  //вернем значение переменной $result.
	}

	echo square(3); //выведет на экран '9'

	/*
		Функция, которая возвращает квадрат числа, 
		можно вызывать как с параметром, так и без!
	*/
	function square($var = 5) //по умолчанию параметр функции имеет значение 5
	{
		$result = $var*$var;
		return $result; //вернем значение переменной $result
	}

	echo square().'<br>'; //мы не передали функции параметр и она выведет на экран 25 (5 в квадрате)
	echo square(3).'<br>'; //по-прежнему выводит 9!

//Область видимости
//Изнутри наружу
/*В программировании существует такое понятие как область видимости переменной. 
Что оно обозначает? Оно обозначает те места кода, в которых переменная имеет то значение, 
которое мы ей присвоили.
Определим внутри функции переменную $local. Выведем ее значение с помощью функции var_dump:*/

	function func()
	{
		$local = 'Тест!';
		var_dump($local); //выведет 'Тест!'
	}

	var_dump($local);
	echo'<br>';
	/*
		Выведет 'null'! 
		Это значит, что переменная $local видна только внутри функции!
	*/

//Снаружи вовнутрь

	/*
		Определим ПЕРЕД функцией переменную $test,
		а затем попробуем вывести ее значение внутри функции:
	*/
	$test = 'Тест!';
	function fun()
	{
		var_dump($test); //выведет 'null', так как внешняя переменная не видна внутри функции!
	}
	fun(); //вызовем нашу функцию, чтобы проверить то, что она выводит	



?>